{"version":3,"sources":["$_lazy_route_resource lazy namespace object","src/app/add-employee/add-employee.component.html","src/app/app.component.html","src/app/employee/employee.component.html","src/app/footer/footer.component.html","src/app/header/header.component.html","src/app/login/login.component.html","src/app/logout/logout.component.html","src/app/add-employee/add-employee.component.css","src/app/add-employee/add-employee.component.ts","src/app/angular-material.module.ts","src/app/app-routing.module.ts","src/app/app.component.scss","src/app/app.component.ts","src/app/app.module.ts","src/app/employee/employee.component.css","src/app/employee/employee.component.ts","src/app/footer/footer.component.css","src/app/footer/footer.component.ts","src/app/header/header.component.css","src/app/header/header.component.ts","src/app/login/login.component.css","src/app/login/login.component.ts","src/app/logout/logout.component.css","src/app/logout/logout.component.ts","src/app/service/auth-gaurd.service.ts","src/app/service/authentication.service.ts","src/app/service/basic-auth-interceptor.service.ts","src/app/service/httpclient.service.ts","src/environments/environment.ts","src/main.ts"],"names":[],"mappings":"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","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","export default \"<mat-card class=\\\"example-card\\\">\\n    <mat-card-header>\\n        <mat-card-title>Add Employee</mat-card-title>\\n    </mat-card-header>\\n    <mat-card-content>\\n        <form class=\\\"example-form\\\">\\n            <table class=\\\"example-full-width\\\" cellspacing=\\\"0\\\">\\n                <tr>\\n                    <td>\\n                        <mat-form-field class=\\\"example-full-width\\\">\\n                            <input matInput placeholder=\\\"Username\\\" [(ngModel)]=\\\"user.name\\\" name=\\\"name\\\" required>\\n                        </mat-form-field>\\n                    </td>\\n                </tr>\\n                <tr>\\n                    <td>\\n                        <mat-form-field class=\\\"example-full-width\\\">\\n                            <input matInput placeholder=\\\"Designation\\\" [(ngModel)]=\\\"user.designation\\\" name=\\\"designation\\\" required>\\n                        </mat-form-field>\\n                    </td>\\n                </tr>\\n                <tr>\\n                    <td>\\n                        <mat-form-field class=\\\"example-full-width\\\">\\n                            <input matInput placeholder=\\\"Employee Id\\\" [(ngModel)]=\\\"user.empId\\\" name=\\\"employeeid\\\" required>\\n                        </mat-form-field>\\n                    </td>\\n                </tr>\\n            </table>\\n        </form>\\n        <mat-spinner [style.display]=\\\"showSpinner ? 'block' : 'none'\\\"></mat-spinner>\\n    </mat-card-content>\\n    <mat-card-actions>\\n        <button mat-raised-button (click)=\\\"createEmployee()\\\" color=\\\"primary\\\">Create</button>\\n    </mat-card-actions>\\n</mat-card>\\n\\n\\n<!-- \\n<div class=\\\"col-md-6\\\">\\n    <h2 class=\\\"text-center\\\">Add Employee</h2>\\n    <form>\\n        <div class=\\\"form-group\\\">\\n            <label for=\\\"name\\\">Name:</label>\\n            <input type=\\\"name\\\" [(ngModel)]=\\\"user.name\\\" placeholder=\\\"Name\\\" name=\\\"name\\\" class=\\\"form-control\\\" id=\\\"name\\\">\\n        </div>\\n\\n        <div class=\\\"form-group\\\">\\n            <label for=\\\"designation\\\">Designation:</label>\\n            <input [(ngModel)]=\\\"user.designation\\\" placeholder=\\\"Designation\\\" name=\\\"designation\\\" class=\\\"form-control\\\" id=\\\"designation\\\">\\n        </div>\\n\\n        <div class=\\\"form-group\\\">\\n            <label for=\\\"empId\\\">Employee Id</label>\\n            <input [(ngModel)]=\\\"user.empId\\\" placeholder=\\\"Employee Id\\\" name=\\\"Employee Id\\\" class=\\\"form-control\\\" id=\\\"employeeid\\\">\\n        </div>\\n\\n        <button class=\\\"btn btn-success\\\" (click)=\\\"createEmployee()\\\">Create</button>\\n    </form>\\n</div> -->\"","export default \"<app-header></app-header>\\n<router-outlet></router-outlet>\\n<app-footer></app-footer>\"","export default \"<table mat-table [dataSource]=\\\"employees\\\" class=\\\"mat-elevation-z8\\\">\\n    <ng-container matColumnDef=\\\"name\\\">\\n        <th mat-header-cell *matHeaderCellDef> Name </th>\\n        <td mat-cell *matCellDef=\\\"let employee\\\"> {{employee.name}} </td>\\n    </ng-container>\\n\\n    <ng-container matColumnDef=\\\"designation\\\">\\n        <th mat-header-cell *matHeaderCellDef> Designation </th>\\n        <td mat-cell *matCellDef=\\\"let employee\\\"> {{employee.designation}} </td>\\n    </ng-container>\\n\\n    <ng-container matColumnDef=\\\"delete\\\">\\n        <th mat-header-cell *matHeaderCellDef> Action </th>\\n        <td mat-cell *matCellDef=\\\"let employee\\\"><button class=\\\"btn btn-danger\\\" (click)=\\\"deleteEmployee(employee)\\\"> Delete Employee</button> </td>\\n    </ng-container>\\n\\n    <tr mat-header-row *matHeaderRowDef=\\\"displayedColumns\\\"></tr>\\n    <tr mat-row *matRowDef=\\\"let row; columns: displayedColumns;\\\"></tr>\\n</table>\"","export default \"<mat-card class=\\\"footer\\\">\\n</mat-card>\\n<mat-card class=\\\"footer\\\">\\n    <span style=\\\"font-size: smaller;text-align: center;\\\">    All Rights Reserved @TechGeekNext</span>\\n</mat-card>\"","export default \"<mat-toolbar color=\\\"primary\\\">\\n    <mat-toolbar-row>\\n        <span><a mat-button href=\\\"https://www.techgeeknext.com\\\" style=\\\"font-size: larger;\\\">TechGeekNext</a></span>\\n        <span class=\\\"example-fill-remaining-space\\\"></span>\\n        <span class=\\\"align-center\\\"></span>\\n        <span class=\\\"example-spacer\\\"></span>\\n        <a mat-button *ngIf=\\\"!loginService.isUserLoggedIn()\\\" routerLink=\\\"/login\\\" class=\\\"nav-link\\\">Login</a>\\n        <a mat-button *ngIf=\\\"loginService.isUserLoggedIn()\\\" routerLink=\\\"/\\\" class=\\\"nav-link\\\">View Employees</a>\\n        <a mat-button *ngIf=\\\"loginService.isUserLoggedIn()\\\" routerLink=\\\"/addemployee\\\" class=\\\"nav-link\\\">Add New Employee</a>\\n        <a mat-button *ngIf=\\\"loginService.isUserLoggedIn()\\\" routerLink=\\\"/logout\\\" class=\\\"nav-link\\\">LogOut</a>\\n    </mat-toolbar-row>\\n</mat-toolbar>\"","export default \"<!-- <div class=\\\"container\\\">\\n    <div>\\n        User Name : <input type=\\\"text\\\" name=\\\"username\\\" [(ngModel)]=\\\"username\\\"> Password : <input type=\\\"password\\\" name=\\\"password\\\" [(ngModel)]=\\\"password\\\">\\n    </div>\\n    <button (click)=checkLogin() class=\\\"btn btn-success\\\">\\n    Login\\n  </button>\\n</div> -->\\n\\n<mat-card>\\n    <mat-card-header>\\n        <mat-card-title>Login</mat-card-title>\\n    </mat-card-header>\\n    <mat-card-content>\\n        <form>\\n            <table class=\\\"example-full-width\\\" cellspacing=\\\"0\\\">\\n                <tr>\\n                    <td>\\n                        <mat-form-field class=\\\"example-full-width\\\">\\n                            <input matInput placeholder=\\\"Username\\\" [(ngModel)]=\\\"username\\\" name=\\\"username\\\" required>\\n                        </mat-form-field>\\n                    </td>\\n                </tr>\\n                <tr>\\n                    <td>\\n                        <mat-form-field class=\\\"example-full-width\\\">\\n                            <input matInput placeholder=\\\"Password\\\" [(ngModel)]=\\\"password\\\" type=\\\"password\\\" name=\\\"password\\\" required>\\n                        </mat-form-field>\\n                    </td>\\n                </tr>\\n                <p *ngIf=\\\"error\\\" class=\\\"error\\\">\\n                    {{ error }}\\n                </p>\\n            </table>\\n        </form>\\n        <mat-spinner [style.display]=\\\"showSpinner ? 'block' : 'none'\\\"></mat-spinner>\\n    </mat-card-content>\\n    <mat-card-actions>\\n        <button mat-raised-button (click)=\\\"checkLogin()\\\" color=\\\"primary\\\">Login</button>\\n    </mat-card-actions>\\n</mat-card>\"","export default \"<p>\\n  logout works!\\n</p>\\n\"","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FkZC1lbXBsb3llZS9hZGQtZW1wbG95ZWUuY29tcG9uZW50LmNzcyJ9 */\"","import { Component, OnInit } from \"@angular/core\";\nimport { HttpClientService, Employee } from \"../service/httpclient.service\";\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: \"app-add-employee\",\n  templateUrl: \"./add-employee.component.html\",\n  styleUrls: [\"./add-employee.component.css\"]\n})\nexport class AddEmployeeComponent implements OnInit {\n  user: Employee = new Employee(\"\", \"\", \"\", \"\");\n\n  constructor(private httpClientService: HttpClientService,\n    private router: Router) {}\n\n  ngOnInit() {}\n\n  createEmployee(): void {\n    console.debug(this.user);\n    this.httpClientService.createEmployee(this.user).subscribe(data => {\n      alert(\"Employee created successfully.\");\n      this.router.navigate([''])\n    });\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport {\n  MatCardModule,\n  MatDialogModule,\n  MatMenuModule,\n   MatButtonModule,\n   MatToolbarModule,\n   MatIconModule,\n   MatBadgeModule,\n   MatSidenavModule,\n   MatListModule,\n   MatGridListModule,\n   MatFormFieldModule,\n   MatInputModule,\n   MatSelectModule,\n   MatRadioModule,\n   MatDatepickerModule,\n   MatNativeDateModule,\n   MatChipsModule,\n   MatTooltipModule,\n   MatTableModule,\n   MatPaginatorModule,\n   MatProgressSpinnerModule\n} from '@angular/material';\n\n@NgModule({\n   imports: [\n    MatCardModule, \n    MatDialogModule, \n    MatMenuModule,\n    MatProgressSpinnerModule,\n      CommonModule,\n      MatButtonModule,\n      MatToolbarModule,\n      MatIconModule,\n      MatSidenavModule,\n      MatBadgeModule,\n      MatListModule,\n      MatGridListModule,\n      MatFormFieldModule,\n      MatInputModule,\n      MatSelectModule,\n      MatRadioModule,\n      MatDatepickerModule,\n      MatNativeDateModule,\n      MatChipsModule,\n      MatTooltipModule,\n      MatTableModule,\n      MatPaginatorModule\n   ],\n   exports: [\n    MatCardModule, \n    MatDialogModule, \n    MatMenuModule,\n    MatProgressSpinnerModule,\n      MatButtonModule,\n      MatToolbarModule,\n      MatIconModule,\n      MatSidenavModule,\n      MatBadgeModule,\n      MatListModule,\n      MatGridListModule,\n      MatInputModule,\n      MatFormFieldModule,\n      MatSelectModule,\n      MatRadioModule,\n      MatDatepickerModule,\n      MatChipsModule,\n      MatTooltipModule,\n      MatTableModule,\n      MatPaginatorModule\n   ],\n   providers: [\n      MatDatepickerModule,\n   ]\n})\n\nexport class AngularMaterialModule { }","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { EmployeeComponent } from './employee/employee.component';\nimport { AddEmployeeComponent } from './add-employee/add-employee.component';\nimport { LoginComponent } from './login/login.component';\nimport { LogoutComponent } from './logout/logout.component';\nimport { AuthGaurdService } from './service/auth-gaurd.service';\n\nconst routes: Routes = [\n  { path: '', component: EmployeeComponent,canActivate:[AuthGaurdService] },\n  { path: 'addemployee', component: AddEmployeeComponent,canActivate:[AuthGaurdService]},\n  { path: 'login', component: LoginComponent },\n  { path: 'logout', component: LogoutComponent,canActivate:[AuthGaurdService] },\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FwcC5jb21wb25lbnQuc2NzcyJ9 */\"","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent {\n  title = 'angular-jwt';\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { EmployeeComponent } from './employee/employee.component';\nimport { HttpClientModule, HTTP_INTERCEPTORS } from '@angular/common/http';\nimport { AddEmployeeComponent } from './add-employee/add-employee.component';\nimport { FormsModule } from '@angular/forms';\nimport { HeaderComponent } from './header/header.component';\nimport { FooterComponent } from './footer/footer.component';\nimport { LoginComponent } from './login/login.component';\nimport { LogoutComponent } from './logout/logout.component';\nimport { AngularMaterialModule } from './angular-material.module';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { BasicAuthHtppInterceptorService } from './service/basic-auth-interceptor.service';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    EmployeeComponent,\n    AddEmployeeComponent,\n    HeaderComponent,\n    FooterComponent,\n    LoginComponent,\n    LogoutComponent\n  ],\n  imports: [\n    BrowserModule,\n    AngularMaterialModule,\n    AppRoutingModule,\n    BrowserAnimationsModule,\n    HttpClientModule,\n    FormsModule\n  ],\n  providers: [ { provide: HTTP_INTERCEPTORS, useClass: BasicAuthHtppInterceptorService, multi: true }],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","export default \"table {\\n    width: 100%;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvZW1wbG95ZWUvZW1wbG95ZWUuY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtJQUNJLFdBQVc7QUFDZiIsImZpbGUiOiJzcmMvYXBwL2VtcGxveWVlL2VtcGxveWVlLmNvbXBvbmVudC5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyJ0YWJsZSB7XG4gICAgd2lkdGg6IDEwMCU7XG59Il19 */\"","import { Component, OnInit } from \"@angular/core\";\nimport { HttpClientService, Employee } from \"../service/httpclient.service\";\n\n@Component({\n  selector: \"app-employee\",\n  templateUrl: \"./employee.component.html\",\n  styleUrls: [\"./employee.component.css\"]\n})\nexport class EmployeeComponent implements OnInit {\n  employees: Employee[];\n  displayedColumns: string[] = [\"name\", \"designation\", \"delete\"];\n\n  constructor(private httpClientService: HttpClientService) {}\n\n  ngOnInit() {\n    this.httpClientService\n      .getEmployees()\n      .subscribe(response => this.handleSuccessfulResponse(response));\n  }\n\n  handleSuccessfulResponse(response) {\n    this.employees = response;\n  }\n\n  deleteEmployee(employee: Employee): void {\n    this.httpClientService.deleteEmployee(employee).subscribe(data => {\n      this.employees = this.employees.filter(u => u !== employee);\n    });\n  }\n}\n","export default \".footer {\\n    position: relative;\\n    bottom: 0;\\n    height: 10px;\\n    text-align: center;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvZm9vdGVyL2Zvb3Rlci5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0lBQ0ksa0JBQWtCO0lBQ2xCLFNBQVM7SUFDVCxZQUFZO0lBQ1osa0JBQWtCO0FBQ3RCIiwiZmlsZSI6InNyYy9hcHAvZm9vdGVyL2Zvb3Rlci5jb21wb25lbnQuY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLmZvb3RlciB7XG4gICAgcG9zaXRpb246IHJlbGF0aXZlO1xuICAgIGJvdHRvbTogMDtcbiAgICBoZWlnaHQ6IDEwcHg7XG4gICAgdGV4dC1hbGlnbjogY2VudGVyO1xufSJdfQ== */\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-footer',\n  templateUrl: './footer.component.html',\n  styleUrls: ['./footer.component.css']\n})\nexport class FooterComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2hlYWRlci9oZWFkZXIuY29tcG9uZW50LmNzcyJ9 */\"","import { Component, OnInit } from '@angular/core';\nimport { AuthenticationService } from '../service/authentication.service';\n\n@Component({\n  selector: 'app-header',\n  templateUrl: './header.component.html',\n  styleUrls: ['./header.component.css']\n})\nexport class HeaderComponent implements OnInit {\n\n  constructor(private loginService:AuthenticationService){ }\n  ngOnInit() {\n  }\n\n}\n","export default \":host {\\n    display: flex;\\n    justify-content: center;\\n    margin: 100px 0px;\\n}\\n\\n.mat-form-field {\\n    width: 100%;\\n    min-width: 300px;\\n}\\n\\nmat-card-title,\\nmat-card-content {\\n    display: flex;\\n    justify-content: center;\\n}\\n\\n.error {\\n    padding: 16px;\\n    width: 300px;\\n    color: white;\\n    background-color: red;\\n}\\n\\n.button {\\n    display: flex;\\n    justify-content: flex-end;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvbG9naW4vbG9naW4uY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtJQUNJLGFBQWE7SUFDYix1QkFBdUI7SUFDdkIsaUJBQWlCO0FBQ3JCOztBQUVBO0lBQ0ksV0FBVztJQUNYLGdCQUFnQjtBQUNwQjs7QUFFQTs7SUFFSSxhQUFhO0lBQ2IsdUJBQXVCO0FBQzNCOztBQUVBO0lBQ0ksYUFBYTtJQUNiLFlBQVk7SUFDWixZQUFZO0lBQ1oscUJBQXFCO0FBQ3pCOztBQUVBO0lBQ0ksYUFBYTtJQUNiLHlCQUF5QjtBQUM3QiIsImZpbGUiOiJzcmMvYXBwL2xvZ2luL2xvZ2luLmNvbXBvbmVudC5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyI6aG9zdCB7XG4gICAgZGlzcGxheTogZmxleDtcbiAgICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcbiAgICBtYXJnaW46IDEwMHB4IDBweDtcbn1cblxuLm1hdC1mb3JtLWZpZWxkIHtcbiAgICB3aWR0aDogMTAwJTtcbiAgICBtaW4td2lkdGg6IDMwMHB4O1xufVxuXG5tYXQtY2FyZC10aXRsZSxcbm1hdC1jYXJkLWNvbnRlbnQge1xuICAgIGRpc3BsYXk6IGZsZXg7XG4gICAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XG59XG5cbi5lcnJvciB7XG4gICAgcGFkZGluZzogMTZweDtcbiAgICB3aWR0aDogMzAwcHg7XG4gICAgY29sb3I6IHdoaXRlO1xuICAgIGJhY2tncm91bmQtY29sb3I6IHJlZDtcbn1cblxuLmJ1dHRvbiB7XG4gICAgZGlzcGxheTogZmxleDtcbiAgICBqdXN0aWZ5LWNvbnRlbnQ6IGZsZXgtZW5kO1xufSJdfQ== */\"","import { Component, OnInit, Input } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { AuthenticationService } from '../service/authentication.service';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent implements OnInit {\n\n  username = ''\n  password = ''\n  invalidLogin = false\n  \n  @Input() error: string | null;\n\n  constructor(private router: Router,\n    private loginservice: AuthenticationService) { }\n\n  ngOnInit() {\n  }\n\n  checkLogin() {\n    (this.loginservice.authenticate(this.username, this.password).subscribe(\n      data => {\n        this.router.navigate([''])\n        this.invalidLogin = false\n      },\n      error => {\n        this.invalidLogin = true\n        this.error = error.message;\n\n      }\n    )\n    );\n\n  }\n\n}","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2xvZ291dC9sb2dvdXQuY29tcG9uZW50LmNzcyJ9 */\"","import { Component, OnInit } from '@angular/core';\nimport { AuthenticationService } from '../service/authentication.service';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-logout',\n  templateUrl: './logout.component.html',\n  styleUrls: ['./logout.component.css']\n})\nexport class LogoutComponent implements OnInit {\n\n  constructor(\n    private authentocationService: AuthenticationService,\n    private router: Router) {\n\n  }\n\n  ngOnInit() {\n    this.authentocationService.logOut();\n    this.router.navigate(['login']);\n  }\n\n}","import { Injectable } from '@angular/core';\nimport { CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot, Router } from '@angular/router';\nimport { AuthenticationService } from './authentication.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthGaurdService implements CanActivate {\n\n  constructor(private router: Router,\n    private authService: AuthenticationService) { }\n\n  canActivate(route: ActivatedRouteSnapshot, state: RouterStateSnapshot) {\n    if (this.authService.isUserLoggedIn())\n      return true;\n\n    this.router.navigate(['login']);\n    return false;\n\n  }\n\n}","import { Injectable } from \"@angular/core\";\nimport { HttpClient, HttpHeaders } from \"@angular/common/http\";\nimport { map } from \"rxjs/operators\";\n\nexport class User {\n  constructor(public status: string) {}\n}\n\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AuthenticationService {\n  constructor(private httpClient: HttpClient) {}\n// Provide username and password for authentication, and once authentication is successful, \n//store JWT token in session\n  authenticate(username, password) {\n    return this.httpClient\n      .post<any>(\"http://localhost:8080/authenticate\", { username, password })\n      .pipe(\n        map(userData => {\n          sessionStorage.setItem(\"username\", username);\n          let tokenStr = \"Bearer \" + userData.token;\n          sessionStorage.setItem(\"token\", tokenStr);\n          return userData;\n        })\n      );\n  }\n\n  isUserLoggedIn() {\n    let user = sessionStorage.getItem(\"username\");\n    console.log(!(user === null));\n    return !(user === null);\n  }\n\n  logOut() {\n    sessionStorage.removeItem(\"username\");\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpInterceptor, HttpRequest, HttpHandler } from '@angular/common/http';\nimport { AuthenticationService } from './authentication.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class BasicAuthHtppInterceptorService implements HttpInterceptor {\n\n  constructor() { }\n\n  intercept(req: HttpRequest<any>, next: HttpHandler) {\n\n    if (sessionStorage.getItem('username') && sessionStorage.getItem('token')) {\n      req = req.clone({\n        setHeaders: {\n          Authorization: sessionStorage.getItem('token')\n        }\n      })\n    }\n\n    return next.handle(req);\n\n  }\n}\n","import { Injectable } from \"@angular/core\";\nimport { HttpClient, HttpHeaders } from \"@angular/common/http\";\n\nexport class Employee {\n  constructor(\n    public empId: string,\n    public name: string,\n    public designation: string,\n    public salary: string\n  ) {}\n}\n\n@Injectable({\n  providedIn: \"root\"\n})\nexport class HttpClientService {\n  constructor(private httpClient: HttpClient) {}\n\n  getEmployees() {\n    return this.httpClient.get<Employee[]>(\"http://localhost:8080/employees\");\n  }\n\n  public deleteEmployee(employee) {\n    return this.httpClient.delete<Employee>(\n      \"http://localhost:8080/employees\" + \"/\" + employee.empId\n    );\n  }\n\n  public createEmployee(employee) {\n    return this.httpClient.post<Employee>(\n      \"http://localhost:8080/employees\",\n      employee\n    );\n  }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import 'hammerjs';\nimport { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":"webpack:///","file":"main-es5.js"}